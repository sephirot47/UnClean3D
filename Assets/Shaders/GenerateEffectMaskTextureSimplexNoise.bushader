#vertex

uniform mat4 SceneModelMatrix;

layout(location = 0) in vec3 vinTexturePosition;
layout(location = 1) in vec3 vinPosition;

out vec3 inWorldPosition;

void main()
{
    inWorldPosition = (SceneModelMatrix * vec4(vinPosition, 1)).xyz;
    gl_Position = vec4(vinTexturePosition, 1);
}

// ===============================================================

#fragment
#define BANG_FRAGMENT
#include "Noises.glsl"

uniform float FractalSeed;
uniform float FractalOffset;
uniform float FractalOctaves;
uniform float FractalFrequency;
uniform float FractalFrequencyMultiply;
uniform float FractalAmplitude;
uniform float FractalAmplitudeMultiply;

in vec3 inWorldPosition;

layout(location = 0) out vec4 OutColor;

void main()
{
    vec3 worldPosition = inWorldPosition;
    float noiseValue = snoiseFull(inWorldPosition,
                                  FractalFrequency * 50,
                                  FractalFrequencyMultiply,
                                  FractalAmplitude,
                                  FractalAmplitudeMultiply,
                                  FractalOctaves,
                                  FractalSeed);
    noiseValue += FractalOffset;

    OutColor = vec4(noiseValue, noiseValue, noiseValue, noiseValue);
    // OutColor = vec4(1, 1, 1, 1);
}


