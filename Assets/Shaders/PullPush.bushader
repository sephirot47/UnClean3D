#vertex
#include "ScreenPass.vert"

// ===============================================================

#fragment
#define BANG_FRAGMENT
#include "Common.glsl"

const int PULLING = 0;
const int PUSHING = 1;

uniform int ShaderPhase;
uniform sampler2D PreviousPulledTexture;
uniform sampler2D PreviousPushedTexture;
uniform sampler2D CurrentPulledTexture;
uniform sampler2D CurrentPushedTexture;

in vec2 B_FIn_AlbedoUv;

layout(location = 0) out vec4 OutColor;

void main()
{
    vec2 uv = B_FIn_AlbedoUv;

    if (ShaderPhase == PULLING)
    {
        float totalWeight = 0.0f;
        vec4 accumulatedColor = vec4(0);
        for (int x = -1; x <= 1; ++x)
        {
            for (int y = -1; y <= 1; ++y)
            {
                vec2 sampleUv = uv;
                sampleUv += vec2(x,y) * (1.0f / textureSize(PreviousPulledTexture, 0));

                vec4 texColor = texture(PreviousPulledTexture, sampleUv);
                if (texColor.a > 0)
                {
                    totalWeight += 1.0f;
                    accumulatedColor += texColor;
                }
            }
        }

        if (totalWeight > 0)
        {
            OutColor = accumulatedColor / totalWeight;
            OutColor.rgb /= OutColor.a;
            OutColor.a = 1.0f;
        }
        else
        {
            OutColor = vec4(0);
        }
    }
    else
    {
        vec4 currentPulledTexColor = texture(CurrentPulledTexture, uv);
        if (currentPulledTexColor.a == 1)
        {
            OutColor = currentPulledTexColor;
        }
        else
        {
            vec4 previousPushedTexColor = texture(PreviousPushedTexture, uv);
            OutColor = previousPushedTexColor;
        }
    }
}


