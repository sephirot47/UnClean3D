#vertex

layout(location = 0) in vec3 vinTexturePosition;
layout(location = 1) in vec3 vinPosition;

out vec3 finPosition;

void main()
{
    finPosition = vinPosition;
    gl_Position = vec4(vinTexturePosition, 1);
}

// ===============================================================

#fragment
#define BANG_FRAGMENT
#include "SimplexNoise3D.glsl"

uniform sampler2D DirtTexture;
uniform float DirtSeed;
uniform float DirtOctaves;
uniform float DirtFrequency;
uniform float DirtFrequencyMultiply;
uniform float DirtAmplitude;
uniform float DirtAmplitudeMultiply;
uniform vec4 DirtColor0;
uniform vec4 DirtColor1;

in vec3 finPosition;

layout(location = 0) out vec4 OutColor;

void main()
{
    float frequency = DirtFrequency;
    float amplitude = DirtAmplitude;

    float noiseValue = 0.0f;
    for (int i = 0; i < DirtOctaves; ++i)
    {
        float octaveNoiseValue = snoise(finPosition * frequency + DirtSeed) * amplitude;
        noiseValue += octaveNoiseValue;

        frequency *= DirtFrequencyMultiply;
        amplitude *= DirtAmplitudeMultiply;
    }

    noiseValue = clamp(noiseValue, 0, 1);
    vec3 noise = vec3(noiseValue);

    vec3 dirtColor0 = DirtColor0.rgb;
    vec3 dirtColor1 = DirtColor1.rgb;
    vec3 coloredNoise = mix(dirtColor0, dirtColor1, noise);

    OutColor = vec4(coloredNoise, noiseValue);
}


