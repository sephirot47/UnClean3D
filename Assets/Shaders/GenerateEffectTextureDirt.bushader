#vertex

uniform mat4 SceneModelMatrix;

layout(location = 0) in vec3 vinTexturePosition;
layout(location = 1) in vec3 vinPosition;

out vec3 inWorldPosition;

void main()
{
    inWorldPosition = (SceneModelMatrix * vec4(vinPosition, 1)).xyz;
    gl_Position = vec4(vinTexturePosition, 1);
}

// ===============================================================

#fragment
#define BANG_FRAGMENT
#include "SimplexNoise3D.glsl"

uniform sampler2D DirtTexture;
uniform float DirtSeed;
uniform float DirtOctaves;
uniform float DirtFrequency;
uniform float DirtFrequencyMultiply;
uniform float DirtAmplitude;
uniform float DirtAmplitudeMultiply;
uniform vec4 DirtOuterColor;
uniform vec4 DirtInnerColor;

in vec3 inWorldPosition;

layout(location = 0) out vec4 OutColor;

void main()
{
    float frequency = DirtFrequency * 50;
    float amplitude = DirtAmplitude;

    vec3 worldPosition = inWorldPosition;
    float noiseValue = snoiseFull(worldPosition,
                                  frequency,
                                  DirtFrequencyMultiply,
                                  amplitude,
                                  DirtAmplitudeMultiply,
                                  DirtOctaves,
                                  DirtSeed);
    noiseValue = clamp(noiseValue, 0.01, 1);
    vec3 noise = vec3(noiseValue);

    vec3 dirtOuterColor = DirtOuterColor.rgb;
    vec3 dirtInnerColor = DirtInnerColor.rgb;
    vec3 coloredNoise = mix(dirtOuterColor, dirtInnerColor, noise);

    OutColor = vec4(coloredNoise, noiseValue);
}


